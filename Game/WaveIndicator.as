package Game{	import flash.display.Sprite;	import flash.geom.Rectangle;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;		public final class WaveIndicator extends Sprite	{		public var container:Sprite;				public function WaveIndicator() 		{ 			container = new Sprite();			container.scrollRect = new Rectangle(-160, 0, 404, 19);			addChild(container);						setChildIndex(bars, numChildren - 1);				}				public function setupMore(waves:Vector.<Wave>):void		{			var label:WaveLabel;			var wave:Wave;			var i:int;						// setup labels			for(i=0; i<waves.length; i++)			{				wave = waves[i];				label = new WaveLabel();				label.num.text = wave.num.toString();				label.description.autoSize = TextFieldAutoSize.LEFT;				label.description.text = wave.name;				label.wave = wave;				label.x = 80 + container.scrollRect.x + i * 80;				label.y = 2;								var color:uint = getColor(wave.color);				label.num.textColor = color;				label.description.textColor = color;					container.addChild(label);			}		}				public function setup(waves:Vector.<Wave>):void		{			var label:WaveLabel;			var wave:Wave;			var i:int;						// setup labels			for(i=0; i<waves.length; i++)			{				wave = waves[i];				label = new WaveLabel();				label.num.text = wave.num.toString();				label.description.autoSize = TextFieldAutoSize.LEFT;				label.description.text = wave.name;				label.wave = wave;				label.x = i * 80;				label.y = 2;								var color:uint = getColor(wave.color);								label.num.textColor = color;				label.description.textColor = color;				container.addChild(label);			}		}				private function getColor(color:int):uint		{			switch(color)			{								case ColorModes.Red:					return 0x990000;									case ColorModes.Black:					return 0x000000;									case ColorModes.Green:					return 0x339933;										//case ColorModes.Blue:				default:					return 0x336699;			}		}				public function jump(wave:int):void		{			var position:int = wave * 80 - 80;			container.scrollRect = new Rectangle(position, 0, 404, 19);		}				public function update(wave:int, remaining:int, total:int):void		{			var move:int = Math.floor(((total - remaining) / total) * 80);			var position:int = wave * 80 - 80 + move;			container.scrollRect = new Rectangle(position, 0, 404, 19);		}	}}
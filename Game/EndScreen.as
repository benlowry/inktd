package Game{	import flash.display.BitmapData;	import flash.display.Sprite;	import flash.events.Event;	import flash.text.TextField;		public class EndScreen extends Sprite	{		public var ticks:int;		public var w:Game.World;		public var totalScore:int;		public var lives:int;		public var waves:int;		public var kills:int;		public var money:int;		public var endLives:int;		public var endWaves:int;		public var endKills:int;				public var endMoney:int;		public var deduct:int = 1;		public var wMode:int;		public var wTarget:int;		private var endLivesBonus:TextField;		private var endKillsBonus:TextField;		private var endWavesBonus:TextField;		private var endMoneyBonus:TextField;		private var livesBonus:TextField;		private var killsBonus:TextField;		private var wavesBonus:TextField;		private var moneyBonus:TextField;		private var total:TextField;				public function EndScreen(_w:Game.World, 								  _endLivesBonus:TextField, _endKillsBonus:TextField, _endWavesBonus:TextField, _endMoneyBonus:TextField,								  _livesBonus:TextField, _killsBonus:TextField, _wavesBonus:TextField, _moneyBonus:TextField, _total:TextField) 		{			w = _w;			endLivesBonus = _endLivesBonus;			endKillsBonus = _endKillsBonus;			endWavesBonus = _endWavesBonus;			endMoneyBonus = _endMoneyBonus;					livesBonus = _livesBonus;			killsBonus = _killsBonus;			wavesBonus = _wavesBonus;			moneyBonus = _moneyBonus;			total = _total;						endLives = w.lives;			endKills = w.kills;			endWaves = w.waveNumber;			endMoney = w.money;			wMode = w.mode;			wTarget = w.waveTarget;						endLivesBonus.text = endLives > 0 ? endLives + " x " : "";			endKillsBonus.text = endKills > 0 ? endKills + " x " : "";			endWavesBonus.text = endWaves > 0 ? endWaves + " x " : "";			endMoneyBonus.text = endMoney > 0 ? endMoney + " x " : "";						addEventListener(Event.ENTER_FRAME, scoreTally, false, 0, true);		}				public function dispose():void		{			removeEventListener(Event.ENTER_FRAME, scoreTally, false);		}				public function scoreTally(e:Event):void		{			var finished:Boolean = true;			var d:int;						ticks++;						if(ticks % 5 == 0)				deduct += 2;						if(endLives > 0)			{				d = deduct < endLives ? deduct : endLives;				finished = false;								lives += (d * 100);				totalScore += (d * 100);				endLives -= d;				livesBonus.text = lives.toString();								endLivesBonus.text =  endLives > 0 ? "x" + endLives : "";			}									if(endKills > 0)			{				d = deduct < endKills ? deduct : endKills;				finished = false;								kills += (d * 100);				totalScore += (d * 100);				endKills -= d;				killsBonus.text = kills.toString();				endKillsBonus.text = endKills > 0 ? "x" + endKills : "";			}									if(endWaves > 0)			{				d = deduct < endWaves ? deduct : endWaves;				finished = false;								waves += (d * 100);				totalScore += (d * 100);				endWaves -= d;				wavesBonus.text = waves.toString();				endWavesBonus.text = endWaves > 0 ? "x" + endWaves : "";			}						if(endMoney > 0)			{				d = deduct < endMoney ? deduct : endMoney;				finished = false;								money += (d * 100);				totalScore += (d * 100);				endMoney -= d;				moneyBonus.text = money.toString();				endMoneyBonus.text = endMoney > 0 ? "x" + endMoney : "";			}									total.text = totalScore.toString();						if(finished)			{				removeEventListener(Event.ENTER_FRAME, scoreTally, false);			}		}	}}